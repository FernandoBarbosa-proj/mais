% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download.R
\name{dataset_help}
\alias{dataset_help}
\title{Query a table by its name, without SQL code}
\usage{
dataset_help(
  dataset,
  option = "dictionary",
  billing_project_id = get_billing_id()
)
}
\arguments{
\item{dataset}{String, name of a data set.}

\item{option}{Binary. "Dictionary" will output the dataset's dictionary in tibble format. "Browse" will launch the data set's webpage.}

\item{billing_project_id}{a string containing your billing project id. If you've run \code{set_billing_id} then feel free to leave this empty.}

\item{table}{defaults to \code{NULL}. If a table name is provided then it'll be concatenated with "basedosdados." and the whole table will be returned.}

\item{page_size}{\code{bigrquery} internal, how many rows per page should there be. Defaults to 10000, consider increasing if running into performance issues or big queries.}

\item{project}{which project should be consulted. Defaults to "basedosdados", but can be used to query custom versions of the datalake.}
}
\value{
Returns information on a data set. If you want to check for factors' and variables' meanings, set \code{option} to "Dictionary".
If you prefer to check the data set's full webpage, where you can access the data sets' geographic and chronological range,
available data tables and Base dos Dados' members who are in charge of this data set, set \code{option} to "Browse".
}
\description{
\code{read_sql} takes in SQL code and runs the query for you. \code{read_table("table")} will return the entire table or an error in case it doesn't exist.
}
\examples{

\dontrun{

# instead of a SQL query use a table name directly

data <- read_table(table = "br_ibge_pib.municipio")
data <- read_table(table = "br_ibge_populacao.municipio")

}


\dontrun{

#Checking factors
dictionary("br_inep_censo_escolar")

dictionary("br_me_rais")

#Checking for was responsible for uploading this dataset


}


}
